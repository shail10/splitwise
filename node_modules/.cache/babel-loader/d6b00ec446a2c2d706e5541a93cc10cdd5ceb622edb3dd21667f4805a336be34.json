{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { GET_ALL_TRANSACTION } from '../../utils/constant';\nconst initialState = {\n  transactions: localStorage.getItem('all-transaction')\n};\nconst transactionSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {\n    addExpenses: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.transactions.push(payload);\n      console.log(payload);\n    }\n  }\n});\nexport const {\n  addExpenses\n} = transactionSlice.actions;\nexport default transactionSlice.reducer;","map":{"version":3,"names":["createSlice","GET_ALL_TRANSACTION","initialState","transactions","localStorage","getItem","transactionSlice","name","reducers","addExpenses","state","payload","push","console","log","actions","reducer"],"sources":["/Users/ksrajeshbhai/Desktop/prime/splitwise/src/features/transaction/transactionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { GET_ALL_TRANSACTION } from '../../utils/constant'\n\nconst initialState = {\n  transactions: localStorage.getItem('all-transaction'),\n}\n\nconst transactionSlice = createSlice({\n  name: 'transactions',\n  initialState,\n  reducers: {\n    addExpenses: (state, { payload }) => {\n      state.transactions.push(payload)\n      console.log(payload)\n    },\n  },\n})\nexport const { addExpenses } = transactionSlice.actions\nexport default transactionSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,mBAAmB,QAAQ,sBAAsB;AAE1D,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,iBAAiB;AACtD,CAAC;AAED,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,cAAc;EACpBL,YAAY;EACZM,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAK,WAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MAC9BD,KAAK,CAACP,YAAY,CAACS,IAAI,CAACD,OAAO,CAAC;MAChCE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEF;AAAY,CAAC,GAAGH,gBAAgB,CAACS,OAAO;AACvD,eAAeT,gBAAgB,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}